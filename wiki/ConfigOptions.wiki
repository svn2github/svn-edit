#summary Information on setting configuration options

= Introduction =

As of version 2.5, SVG-edit has several configuration settings that can be overridden either by adding URL parameters or by setting the options in !JavaScript. As of version 2.7, a few among these options related to paths are disallowed via URL though they can still be set by svgEditor.setConfig.

== How to set the options ==

Options can be set using svgEditor.setConfig(options), where "options" is an object literal of keys and values. This must be run _before_ the actual page or DOM is loaded, otherwise it will have no effect. Note that one may create a "config.js" file within the "editor" directory and add such configuration directives to it without needing to modify the repository editor code.

Example:

{{{
svgEditor.setConfig({
	dimensions: [320, 240],
	canvas_expansion: 5,
	initFill: {
		color: '0000FF'
	}
});
}}}

This will set the default width/height of the image, the size of the outside canvas, and the default "fill" color.

The same options can be set in the URL like this:

{{{
.../svg-editor.html?dimensions=300,240&canvas_expansion=5&initFill[color]=0000FF
}}}

As of version 2.7, if options are set both using .setConfig() as well as in the URL, the .setConfig() value will be used. The reverse was true in previous versions but was changed for security reasons.

One may optionally pass another object to .setConfig() as the second argument to further adjust configuration behavior.

If an "overwrite" boolean is set to false on this additional object, it will, as occurs with all URL type configurations, prevent the current configuration from overwriting any explicitly set previous configurations. The default is true except for URLs which always are false.

If an "allowInitialUserOverride" boolean is set to true, it will allow subsequent configuration overwriting via URL (e.g., if you *do* want the user to have the option to override certain or your (config.js) .setConfig() directives via URL while still wishing to provide them with your own default value, you should add this property).

== Configurable options ==

Note that those items marked as preferences are configuration items which can also be set via the UI (and specifically via Editor Options except where mentioned). Those items which appear in the UI but are not treated internally as preferences are marked with "Maybe" as their status may change.

|| *Property* || *Description* || *Default* || *Preference* ||
|| lang || Two-letter language code. The language must exist in the Editor Preferences language list || en || Yes ||
|| bkgd_url || Background raster image URL. This image will fill the background of the document, useful for tracing purposes || (none) || Yes ||
|| img_save || Defines whether included raster images should be saved as Data URIs when possible, or as URL references. Must be either 'embed' or 'ref'. Settable in the Document Properties dialog. || embed || Yes ||
|| dimensions || The default width/height of a new document. Use an array in setConfig (i.e. `[`800, 600`]`) and comma separated numbers in the URL || `[`640, 480`]` || Maybe ||
|| initFill`[`color`]` || The initial fill color. Must be a hex code string. || FF0000 || No ||
|| initFill`[`opacity`]` || The initial fill opacity. Must be a number between 0 and 1 || 1 || No ||
|| initStroke`[`color`]` || The initial stroke color. Must be a hex code. || 000000 || No ||
|| initStroke`[`width`]` || The initial stroke width. Must be a positive number. || 5 || No ||
|| initStroke`[`opacity`]` || The initial stroke opacity. Must be a number between 0 and 1 || 1 || No ||
|| initTool || The initially selected tool. Must be either the ID of the button for the tool, or the ID without "tool_" prefix || select || No ||
|| imgPath || The path where the SVG icons are located, with trailing slash. Note that as of version 2.7, this is not configurable by URL for security reasons. || images/ || No ||
|| jGraduatePath || The path where jGraduate images are located. Note that as of version 2.7, this is not configurable by URL for security reasons. || jgraduate/images/ || No ||
|| langPath || The path where the language files are located, with trailing slash. Note that as of version 2.7, this is not configurable by URL for security reasons. || locale/ || No ||
|| extPath || The path used for extension files, with trailing slash. Note that as of version 2.7, this is not configurable by URL for security reasons. || extensions/ || No ||
|| extensions || Extensions to load on startup. Use an array in setConfig and comma separated file names in the URL. Note that as of version 2.7, paths containing "/", "\", or ":", are disallowed for security reasons. Although previous versions of this list would entirely override the default list, as of version 2.7, the defaults will always be added to this explicit list unless the configuration "noDefaultExtensions" is included. || `[`'ext-arrows.js','ext-connector.js'`]` || No ||
|| showlayers || Open the layers side-panel by default || false || No ||
|| wireframe || Start in wireframe mode || false || No ||
|| gridSnapping || Enable snap to grid by default. Set in Editor Options. || false || Maybe ||
|| gridColor || Set in Editor Options. || #000 (black) || Maybe || 
|| baseUnit || Set in Editor Options. || px || Maybe ||
|| snappingStep || Set the default grid snapping value. Set in Editor Options. || 10 || Maybe ||
|| showRulers || Initial state of ruler display (v2.6). Set in Editor Options. || true || Maybe ||
|| no_save_warning || A boolean that when true prevents the warning dialog box from appearing when closing/reloading the page. Mostly useful for testing. || false || No ||
|| canvas_expansion || The minimum area visible outside the canvas, as a multiple of the image dimensions. The larger the number, the more one can scroll outside the canvas. || 3 || No ||
|| show_outside_canvas || A boolean that defines whether or not elements outside the canvas should be visible || true || No ||
|| iconsize || Size of the toolbar icons. Must be one of the following: 's', 'm', 'l', 'xl' || m || Yes ||
|| bkgd_color || Canvas background color || #FFF (white) || Yes ||
|| selectNew || Initial state of option to automatically select objects after they are created (v2.6) || true || No ||
|| save_notice_done || Used to track alert status || false || Yes ||
|| export_notice_done || Used to track alert status || false || Yes ||

== Preload a file ==

It is also possible to start the editor with preloaded SVG file, using the following methods:

{{{
// Serialized string:
svgEditor.loadFromString('<svg>...</svg>');

// Data URI: 
svgEditor.loadFromDataURI("data:image/svg+xml;base64,...");

// Local URL:
svgEditor.loadFromURL("images/logo.svg");
}}}

Or as URL parameter:

{{{
// Data URI: 
?source=data:image/svg+xml;base64,...

// Local URL:
?url=images/logo.svg
}}}

*Note:* There is currently a bug that prevents data URIs ending with equals (=) characters from being parsed. Removing these characters seem to allow the import to work as expected.